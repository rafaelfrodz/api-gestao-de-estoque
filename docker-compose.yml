services:
  web:
    build: .
    ports:
      - "5001:5000"
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - cache
      - backend
      - database

  db:
    image: postgres:15
    container_name: api-gestao-estoque-db-1
    ports:
      - "5432:5432"
    env_file:
      - ./.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # Executa o script de inicialização
    networks:
      - database
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - cache
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 3

networks:
  backend:
    driver: bridge
  database:
    driver: bridge
  cache:
    driver: bridge

volumes:
  postgres_data: